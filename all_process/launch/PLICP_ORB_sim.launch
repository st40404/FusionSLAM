
<launch>
    <!-- open gazebo -->
    <!-- <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_bookstore.launch">  </include> -->

    <arg
    name="path_to_vocabulary"
    default="$(find orbslam2_ros)/data/ORBvoc.txt"
    />

    <arg
    name="path_to_settings"
    default="$(find orbslam2_ros)/data/TUM3_sim.yaml"
    />

    <!-- open node: orb_slam -->
    <node pkg="orbslam2_ros"
        name="RGBD"
        type="RGBD"
        args= "$(arg path_to_vocabulary) $(arg path_to_settings)" 
        respawn="true" 
        />

    <!-- -d : delay second before start, -r : rate of player -->
    <node pkg="rosbag"
          type="play" 
          name="player" 
          output="screen" 
          args="--clock -r 1 -d 10 $(find savebag)/bag/short_test.bag" 
          respawn="true"
          respawn_delay="10"
          />


    <!-- open launch: gmapping -->
    <!-- <include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">  </include> -->

    <!-- lidar SLAM parameter -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
    <arg name="open_rviz" default="true"/>
    <param name="/use_sim_time" value="true"/>
    
    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map"/>

    <arg name="multi_robot_name" default=""/>


    <!-- TurtleBot3 -->
    <include file="$(find turtlebot3_bringup)/launch/includes/description.launch.xml">
        <arg name="model" value="$(arg model)" />
    </include>

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" respawn="true" respawn_delay="5">
        <param name="publish_frequency" type="double" value="50.0" />
        <param name="tf_prefix" value="$(arg multi_robot_name)"/>
    </node>



    <!-- Gmapping -->
    <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen" respawn="true" respawn_delay="5">
        <param name="base_frame" value="$(arg set_base_frame)"/>
        <param name="odom_frame" value="$(arg set_odom_frame)"/>
        <param name="map_frame"  value="$(arg set_map_frame)"/>
        <rosparam command="load" file="$(find turtlebot3_slam)/config/gmapping_params.yaml" />
    </node>

    <!-- show the trajectory path of base_scan in map frame -->
    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="laser_trajectory_server" output="screen" respawn="true" respawn_delay="5">
        <param name="target_frame_name" type="string" value="/map" />
        <param name="source_frame_name" type="string" value="/base_scan" />
        <param name="trajectory_update_rate" type="double" value="4" />
        <param name="trajectory_publish_rate" type="double" value="0.25" />
    </node>
    
    <!-- rviz -->
    <!-- <group if="$(arg open_rviz)"> 
        <node pkg="rviz" type="rviz" name="rviz" respawn="true" respawn_delay="5"
            args="-d $(find turtlebot3_slam)/rviz/turtlebot3_$(arg slam_methods).rviz"/>
    </group> -->


    <node pkg="all_process" type="save_log.py" name="save_log" output="screen"/>


</launch>
